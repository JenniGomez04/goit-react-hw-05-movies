{"version":3,"file":"static/js/541.91770be9.chunk.js","mappings":"sSAGMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAKP,SAAeC,IAAtB,+B,aAAO,O,oBAAA,qIAGoBN,EAASO,IAH7B,+CAGKC,EAHL,EAGKA,KAHL,kBAIIA,EAAKC,SAJT,2HAWA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,kFACCC,EADD,iBACmBD,GADnB,kBAGoBX,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAWA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAA+BF,GAA/B,kFACCC,EADD,iBACmBD,EADnB,8BAGoBX,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAWA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAA+BH,GAA/B,kFACCC,EADD,iBACmBD,EADnB,8BAGoBX,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAWA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kFACCJ,EADD,8BACgCI,GADhC,kBAGoBhB,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2H,wKCtDMS,EAASC,EAAAA,GAAAA,IAAH,4GASNC,EAAwBD,EAAAA,GAAAA,IAAH,kVAerBE,EAAmBF,EAAAA,GAAAA,IAAH,+JAchBG,EAAuBH,EAAAA,GAAAA,IAAH,2H,SC0DjC,EA5FqB,WAAO,IAAD,IACjBI,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOhB,EAAP,KAAaiB,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGAEZF,GAAW,GAFC,UAGOjB,EAAAA,EAAAA,IAAgBY,GAHvB,OAGNd,EAHM,OAIZiB,EAAQjB,GACRmB,GAAW,GALC,gDAOZG,QAAQC,IAAR,MAPY,yBASZJ,GAAW,GATC,4EAAH,qDAYbE,GACD,GAAE,CAACP,IAEJ,IAKkBU,EALFC,EAWVC,EAAQ,qBAFGC,EAAAA,EAAAA,MAESC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC1C,OACG,iCACA,SAACpB,EAAD,WACE,SAAC,KAAD,CAAOqB,GAAIJ,EAAUK,UAAU,eAA/B,8BAICb,EACC,cAEA,iCACE,UAACP,EAAD,WACGX,EAAKgC,aACJ,gBAEEC,IAAKjC,EAAKkC,eACVC,IAAG,yCAAoCnC,EAAKgC,gBAG/C,oCAGD,UAACpB,EAAD,YACE,0BACGZ,EAAKkC,eADR,MAnCIT,EAoC8BzB,EAAKoC,aAnCpC,IAAIC,KAAKZ,GACVa,eAiCF,QAGA,2CACsC,GAApBtC,EAAKuC,cADvB,QAGA,sCACA,uBAAIvC,EAAKwC,YACT,oCACA,wBAvCMhB,EAuCQxB,EAAKyC,OAtCtBjB,EAAUkB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAyCzC,SAAChC,EAAD,WACE,2BACE,yBACE,SAAC,KAAD,CAAMiB,GAAG,OAAOF,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMI,GAAG,UAAUF,MAAO,CAAEC,KAAMH,GAAlC,6BAMN,SAAC,EAAAoB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAMX,C","sources":["servicesApi/ApiMovies.jsx","views/MovieDetails/MovieDetails.styled.jsx","views/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n// FUNCIÓN CREA INSTANCIA CON DATOS BASICOS DE LA API PARA LAS CONSULTAS\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd2c1d24020287e7b546fb1f2d1960a86',\n    language: 'en-US',\n  },\n});\n\n// FUNCIÓN TRAE INFORMACIÓN DE LAS PELICULAS POPULARES DEL MOMENTO\nexport async function getTrendingMovies() {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\n// FUNCIÓN TRAE INFORMACIÓN DE DETALLES DE LA PELICULA\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n// FUNCIÓN TRAE INFORMACIÓN DE LOS ACTORES\nexport async function getMovieCredits(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n// FUNCIÓN TRAE INFORMACIÓN DE RESEÑAS DE LAS PELICULAS\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n// FUNCIÓN TRAE INFORMACIÓN DE BUSQUEDA DE USUARIOS\nexport async function searchMovies(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const GoBack = styled.div`\n    padding: 10px;\n    font-size: 18px;\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nexport const ContainerMovieDetails = styled.div`\n    display: flex;\n    align-items: center;\n    padding-bottom: 5px;\n    border-bottom: 1px solid white;\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.2);\n\n    img{\n      width: 15%;\n      padding-top: 10px;\n      padding-left: 5px;\n    }\n`;\n\n\nexport const ContainerDetails = styled.div`\n    margin-left: 25px;\n    margin-right: 10px;\n\n    h1{\n      font-size: 30px;\n    }\n\n    h3{\n      font-size: 20px;\n    }\n\n`;\n\nexport const ContainerInformation = styled.div`\n\n  a{\n    font-size: 18px;\n  }\n\n  li:not(:last-child) {\n     margin-bottom: 10px;{\n  }\n\n\n`;\n\n\n\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieDetails } from '../../servicesApi/ApiMovies';\nimport { GoBack, ContainerMovieDetails, ContainerDetails, ContainerInformation } from './MovieDetails.styled';\n\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieDetails(movieId);\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  const getYear = releaseDate => {\n    const date = new Date(releaseDate);\n    return date.getFullYear();\n  };\n\n  const getGenres = arrGenres => {\n    return arrGenres.map(genre => genre.name).join(', ');\n  };\n\n  const location = useLocation();\n\n  const cameBack = location.state?.from ?? '/';\n return (\n    <>\n    <GoBack>\n      <Link  to={cameBack} className=\"go-back-link\">\n      ↶ Go Back\n      </Link>\n      </GoBack>\n      {loading ? (\n        'Loading...'\n      ) : (\n        <>\n          <ContainerMovieDetails >\n            {data.poster_path ? (\n              <img\n\n                alt={data.original_title}\n                src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\n              />\n            ) : (\n             <p> Sorry </p>\n            )}\n\n            <ContainerDetails >\n              <h1>\n                {data.original_title} ({getYear(data.release_date)})\n              </h1>\n              <p >\n                User Score: {~~(data.vote_average * 10)}%\n              </p>\n              <h3>Overview</h3>\n              <p>{data.overview}</p>\n              <h3>Genres</h3>\n              <p>{getGenres(data.genres)}</p>\n            </ContainerDetails>\n          </ContainerMovieDetails>\n          <ContainerInformation>\n            <ul >\n              <li>\n                <Link to=\"cast\" state={{ from: cameBack }}>\n                 Cast\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={{ from: cameBack }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </ContainerInformation>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","data","results","getMovieDetails","id","query","getMovieCredits","getMovieReviews","searchMovies","queryString","GoBack","styled","ContainerMovieDetails","ContainerDetails","ContainerInformation","movieId","useParams","useState","setData","loading","setLoading","useEffect","getData","console","log","arrGenres","releaseDate","cameBack","useLocation","state","from","to","className","poster_path","alt","original_title","src","release_date","Date","getFullYear","vote_average","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}
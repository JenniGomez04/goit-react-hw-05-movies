{"version":3,"file":"static/js/387.ce9d69d0.chunk.js","mappings":"4QAMaA,GAJiBC,EAAAA,GAAAA,IAAH,gDAIKA,EAAAA,GAAAA,IAAH,iE,SCuD7B,EAtDgB,WACd,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KA6BA,OAzBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,qGACGC,EAAAA,EAAAA,IAAgBT,GADnB,OAClBU,EADkB,OAExBN,EAAWM,GAFa,2CAAH,qDAIvBF,GACD,GAAE,CAACR,KAEJO,EAAAA,EAAAA,YAAU,WACR,IAAMI,EAAO,mCAAG,sGAEZL,GAAW,GAFC,UAGcG,EAAAA,EAAAA,IAAgBT,GAH9B,gBAGJY,EAHI,EAGJA,QACRR,EAAWQ,GACXN,GAAW,GALC,kDAOZO,QAAQC,IAAR,MAPY,yBASZR,GAAW,GATC,6EAAH,qDAYbK,GACD,GAAE,CAACX,KAIF,8BACGK,EACC,aACEF,GAAWA,EAAQY,OAAS,GAClC,SAACjB,EAAD,UAEGK,EAAQa,KAAI,gBAAEhB,EAAF,EAAEA,GAAGiB,EAAL,EAAKA,OAAOC,EAAZ,EAAYA,QAAZ,OACX,4BACE,oCAAYD,MACZ,uBAAIC,MAFIlB,EADC,OAQX,6CAIP,C,sLCxDKmB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qIAGoBN,EAASO,IAH7B,+CAGKC,EAHL,EAGKA,KAHL,kBAIIA,EAAKf,SAJT,2HAUA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,kFACC6B,EADD,iBACmB7B,GADnB,kBAGoBmB,EAASO,IAAIG,GAHjC,uBAGKF,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+B9B,GAA/B,kFACC6B,EADD,iBACmB7B,EADnB,8BAGoBmB,EAASO,IAAIG,GAHjC,uBAGKF,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BT,GAA/B,kFACC6B,EADD,iBACmB7B,EADnB,8BAGoBmB,EAASO,IAAIG,GAHjC,uBAGKF,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kFACCH,EADD,8BACgCG,GADhC,kBAGoBb,EAASO,IAAIG,GAHjC,uBAGKF,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2H","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","servicesApi/ApiMovies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MessageReviews = styled.div`\n    padding-top: 10px;\n`;\n\nexport const ContainerReviews = styled.div`\n    h3{\n      font-size: 19px;\n    }\n`;\n","\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'servicesApi/ApiMovies';\nimport { ContainerReviews } from './Reviews.styled';\n\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      const movieReviews = await getMovieReviews(id);\n      setReviews(movieReviews);\n    };\n    fetchMovieReviews();\n  }, [id]);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieReviews(id);\n        setReviews(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [id]);\n\n\n  return (\n    <>\n      {loading ? (\n        'Loading...'\n      ) : reviews && reviews.length > 0 ? (\n    <ContainerReviews>\n\n      {reviews.map(({id,author,content}) => (\n        <div key={id}>\n          <h3>Autor: {author}</h3>\n          <p>{content}</p>\n        </div>\n      ))}\n    </ContainerReviews>\n     ) : (\n        <p >No reviews found</p>\n      )}\n    </>\n  );\n};\n\n\nexport default Reviews;\n\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd2c1d24020287e7b546fb1f2d1960a86',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCredits(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovies(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["ContainerReviews","styled","id","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchMovieReviews","getMovieReviews","movieReviews","getData","results","console","log","length","map","author","content","instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","data","getMovieDetails","query","getMovieCredits","searchMovies","queryString"],"sourceRoot":""}